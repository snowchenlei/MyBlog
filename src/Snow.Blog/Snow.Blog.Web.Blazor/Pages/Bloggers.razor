@using Snow.Blog.Service.Dto;
@using Snow.Blog.Service.Bloggers.Dto;
@inject Snow.Blog.Service.Bloggers.IBloggerService BloggerService
<div class="list-group">
    @if (bloggers != null)
    {
        foreach (var item in bloggers.Items)
        {
            <div class="list-group-item">
                <div class="d-flex w-100 justify-content-between">
                    <a href="/blogger/@item.Id" target="_blank"><h3 class="mb-1">@item.Title</h3></a>
                    <small><i class="glyphicon glyphicon-calendar"></i>@item.CreateDate.ToLocalTime()</small>
                </div>
                <p class="mb-1">@item.Description</p>
                <small>Donec id elit non mi porta.</small>
            </div>
        }
    }
</div>
@code {
    private PagedResultDto<BloggerListDto> bloggers;

    [Parameter]
    public int Page { get; set; } = 1;
    private int Limit { get; set; } = 10;

    protected override async Task OnInitializedAsync()
    {
        bloggers = await GetBloggers(Page);
    }

    async Task<PagedResultDto<BloggerListDto>> GetBloggers(int page)
    {
        return await BloggerService.GetBloggersPagedAsync(new GetBloggerInput()
        {
            Page = page,
            Limit = Limit
        });
    }

}